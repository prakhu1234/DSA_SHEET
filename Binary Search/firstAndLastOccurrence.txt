int firstAndLastOccur(int arr[],int n, int k){
int start=0;
int end=n-1;
int res1,res2;
vector<int>vec;
while(start<=end){
int mid=start+(end-start)/2;
if(arr[mid]==k){
res1=mid;
end=mid-1;
}
else if(k<arr[mid]){
end=mid-1;
}
else{
start=mid+1;
}
}
vec.push_back(res1);
int start=0;
int end=n-1;
while(start<=end){
int mid=start+(end-start)/2;
if(arr[mid]==k){
res2=mid;
star=mid+1;
}
else if(k<arr[mid]){
end=mid-1;
}
else{
start=mid+1;
}
}

vec.push_back(res2);
return vec;
}
